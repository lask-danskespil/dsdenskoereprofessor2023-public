import { EBooleanValue, EStringValue, EVersionValue } from "../clientEnvironment/interface";
export declare enum EConditionOperator {
    Equal = "eq",
    NotEqual = "ne",
    In = "in",
    NotIn = "nin",
    Regex = "regex",
    LessThan = "lt",
    LessEqual = "le",
    GreaterThan = "gt",
    GreaterEqual = "ge"
}
export declare type StringOperators = EConditionOperator.Equal | EConditionOperator.NotEqual | EConditionOperator.Regex;
export declare type StringArrayOperators = EConditionOperator.In | EConditionOperator.NotIn;
export declare type VersionOperators = EConditionOperator.Equal | EConditionOperator.NotEqual | EConditionOperator.LessThan | EConditionOperator.LessEqual | EConditionOperator.GreaterThan | EConditionOperator.GreaterEqual;
export declare type BooleanOperators = EConditionOperator.Equal | EConditionOperator.NotEqual;
export interface IStringCondition {
    key: EStringValue;
    operator: StringOperators;
    value: string;
}
export declare function isStringCondition(condition: ICondition): condition is IStringCondition;
export interface IStringArrayCondition {
    key: EStringValue;
    operator: StringArrayOperators;
    value: string[];
}
export declare function isStringArrayCondition(condition: ICondition): condition is IStringArrayCondition;
export interface IVersionCondition {
    key: EVersionValue;
    operator: VersionOperators;
    value: string;
}
export declare function isVersionCondition(condition: ICondition): condition is IVersionCondition;
export interface IBooleanCondition {
    key: EBooleanValue;
    operator: BooleanOperators;
    value: boolean;
}
export declare function isBooleanCondition(condition: ICondition): condition is IBooleanCondition;
export declare type ICondition = IStringCondition | IStringArrayCondition | IVersionCondition | IBooleanCondition;
export interface IRule {
    description: string;
    conditions: ICondition[];
}
export interface IConditionMatch {
    condition: ICondition;
    rule: IRule;
}
export interface IList {
    whitelist?: IRule[];
    blacklist?: IRule[];
}
export interface IFullConfiguration {
    global: IList;
    lottery: {
        [lotteryName: string]: IList;
    };
    game: {
        [gameName: string]: IList;
    };
}
