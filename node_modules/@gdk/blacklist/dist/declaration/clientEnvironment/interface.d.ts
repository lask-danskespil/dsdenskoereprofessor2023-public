export declare enum EVersionValue {
    BrowserVersion = "browser.version",
    BrowserMajor = "browser.major",
    EngineVersion = "engine.version",
    OSVersion = "os.version",
    ApplicationVersion = "application.version"
}
export declare enum EStringValue {
    UserAgent = "ua",
    BrowserName = "browser.name",
    EngineName = "engine.name",
    OSName = "os.name",
    DeviceVendor = "device.vendor",
    DeviceModel = "device.model",
    DeviceType = "device.type",
    ApplicationName = "application.name",
    ChannelName = "channel.name"
}
export declare enum EBooleanValue {
    CapabilityWebGL = "capability.webgl"
}
export interface IClientEnvironment {
    /**
     * Get value of string environment variable
     * @param key
     * @returns value as string or undefined
     */
    getStringValueFor(key: EStringValue): string | undefined;
    /**
     * Get value of version (x[.x[.x]]) environment variable
     * @param key
     * @returns value version as string or undefined
     */
    getVersionValueFor(key: EVersionValue): string | undefined;
    /**
     * Get value of boolean environment variable
     * @param key
     * @returns value as boolean or undefined
     */
    getBooleanValueFor(key: EBooleanValue): boolean | undefined;
    /**
     * Returns environment variables as json object ready to be stringified.
     * @returns object
     */
    toJSON(): any;
}
