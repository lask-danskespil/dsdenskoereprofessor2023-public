import { IClientEnvironment, EBooleanValue, EStringValue, EVersionValue } from "./interface";
export declare class UAParserEnvironment implements IClientEnvironment {
    private _ua;
    private _applicationVersion?;
    private _applicationName?;
    private _channelName?;
    private _webGLCapability;
    constructor(parameters: {
        applicationVersion?: string;
        applicationName?: string;
        channelName?: string;
    });
    private _computeWebGLCapability;
    /**
     * Get value of string environment variable
     * @param key
     * @returns value as string or undefined
     */
    getStringValueFor(key: EStringValue): string | undefined;
    /**
     * Get value of version (x[.x[.x]]) environment variable
     * @param key
     * @returns value version as string or undefined
     */
    getVersionValueFor(key: EVersionValue): string | undefined;
    /**
     * Get value of boolean environment variable
     * @param key
     * @returns value as boolean or undefined
     */
    getBooleanValueFor(key: EBooleanValue): boolean | undefined;
    /**
     * Returns environment variables as json object ready to be stringified.
     * @returns object
     */
    toJSON(): any;
}
