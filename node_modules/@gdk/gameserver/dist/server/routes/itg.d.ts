import type * as Hapi from "@hapi/hapi";
import type { BetManager } from "../models/itg/betManager";
export declare function getRoutes(betManager: BetManager): Hapi.ServerRoute[];
export declare class ITGRoutes {
    /**
     * Retrieve game model
     * @param betManager
     */
    static getModel(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Retrieve tickets
     * @param betManager
     */
    static getTickets(betManager: BetManager): Hapi.ServerRoute;
    /**
     * get ticket by id
     * @param betManager
     */
    static getTicketById(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Create a bet
     * @param betManager
     */
    static createBet(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Update a bet
     * @param betManager
     */
    static updateBet(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Add some mocks for future bet
     * @param betManager
     */
    static mockAdd(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Get mocks values
     * @param betManager
     */
    static mockGet(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Delete mocks values
     * @param betManager
     */
    static mockReset(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Delete ticket by ticketId
     * @param betManager
     */
    static removeTicketByIdAdmin(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Get a specific ticket
     * @param betManager
     */
    static getTicketByIdAdmin(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Get a specific player tickets
     * @param betManager
     */
    static getTicketsAdmin(betManager: BetManager): Hapi.ServerRoute;
    /**
     * Legacy bet
     * @param betManager
     */
    static createDeprecatedBet(betManager: BetManager): Hapi.ServerRoute;
}
