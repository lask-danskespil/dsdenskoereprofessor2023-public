import Joi from "joi";
export declare enum TAGS {
    API = "api",
    JACKPOTS = "Jackpots",
    MTP = "Multipass",
    MTR = "Motors",
    ITG = "Instant Games",
    PLAYER = "Player",
    ADMIN = "Admin",
    DEPRECATED = "deprecated"
}
export declare const swaggerOptions: any;
export declare namespace Schema {
    namespace shared {
        const amount: Joi.ObjectSchema<any>;
        const applicationId: Joi.StringSchema<string>;
        const serviceName: Joi.StringSchema<string>;
        const error: Joi.ObjectSchema<any>;
        const gameConfig: Joi.ObjectSchema<any>;
        const lotteryCode: Joi.StringSchema<string>;
        const jackpotExternalId: Joi.StringSchema<string>;
        const configurationName: Joi.StringSchema<string>;
        const jackpotStatusOptions: string[];
        const jackpotResultStatus: Joi.Schema<any>;
        const jackpotBalance: Joi.ObjectSchema<any>;
        const lotteryGameCode: Joi.StringSchema<string>;
        const lotteryGameName: Joi.StringSchema<string>;
        const betId: Joi.StringSchema<string>;
        const jackpots: Joi.ArraySchema<any[]>;
        const jackpotResults: Joi.ObjectSchema<any>;
        const jackpotMock: Joi.ObjectSchema<any>;
        const jackpotsMockPayload: Joi.ObjectSchema<any>;
    }
    namespace player {
        const player: Joi.ObjectSchema<any>;
        const players: Joi.ArraySchema<any[]>;
        const playerId: Joi.StringSchema<string>;
    }
    namespace itg {
        const demoMode: Joi.BooleanSchema<boolean>;
        const model: Joi.AnySchema<any>;
        const symbol: Joi.StringSchema<string>;
        const revelationData: Joi.ObjectSchema<any>;
        const eventReference: Joi.ObjectSchema<any>;
        const ticketStatus: Joi.StringSchema<string>;
        const betMode: Joi.StringSchema<string>;
        const ticketId: Joi.NumberSchema<number>;
        const prize: Joi.ObjectSchema<any>;
        const ticket: Joi.ObjectSchema<any>;
        const tickets: Joi.ArraySchema<any[]>;
        const deprecatedTicket: Joi.AnySchema<any>;
        const betResponse: Joi.ObjectSchema<any>;
        const mockObject: Joi.ObjectSchema<any>;
        const mocks: Joi.ArraySchema<any[]>;
        const ticketFilters: Joi.ObjectSchema<any>;
        const betRequest: Joi.ObjectSchema<any>;
    }
    namespace mtp {
        const error: Joi.ObjectSchema<any>;
        const gameVariantName: Joi.StringSchema<string>;
        const betLevelId: Joi.StringSchema<string>;
        const roomId: Joi.StringSchema<string>;
        const sessionId: Joi.StringSchema<string>;
        const room: Joi.ObjectSchema<any>;
        const session: Joi.ObjectSchema<any>;
        const betLevel: Joi.ObjectSchema<any>;
        const variantParameters: Joi.ObjectSchema<any>;
        const mocks: Joi.ArraySchema<any[]>;
        const betData: Joi.AnySchema<any>;
        const eventName: Joi.StringSchema<string>;
        const playerGameSessionId: Joi.StringSchema<string>;
        const rooms: Joi.ArraySchema<any[]>;
        const playerId: Joi.StringSchema<string>;
    }
    namespace mtr {
        const model: Joi.ObjectSchema<any>;
        const session: Joi.ObjectSchema<any>;
        const prestoTicketInfos: Joi.ObjectSchema<any>;
        const betRequest: Joi.ObjectSchema<any>;
        const betResponse: Joi.ObjectSchema<any>;
        const updateBetRequest: Joi.ObjectSchema<any>;
        const getGameRequest: Joi.ObjectSchema<any>;
        const gameModelId: Joi.StringSchema<string>;
        const addMockRequest: Joi.ObjectSchema<any>;
        const mocksValues: Joi.ArraySchema<any[]>;
        const sessionId: Joi.StringSchema<string>;
    }
    const playerHeaders: Joi.ObjectSchema<any>;
}
