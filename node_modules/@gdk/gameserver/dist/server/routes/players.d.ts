import type * as Hapi from "@hapi/hapi";
export interface IDataType {
    purse: number;
    currency: string;
}
export interface IQueryType {
    data: IDataType[];
}
export declare function getRoutes(): Hapi.ServerRoute[];
export default class PlayerRoutes {
    /**
     * Retrieve list of players
     */
    static getPlayers(): Hapi.ServerRoute;
    /**
     * Retrieve list of players
     */
    static getCurrentPlayer(): Hapi.ServerRoute;
    /**
     * Retrieve specific player by id
     */
    static getPlayer(): Hapi.ServerRoute;
    /**
     * Retrieve purse of a specific player
     */
    static getPlayerPurse(): Hapi.ServerRoute;
    /**
     * Set purse of a specific player
     */
    static setPlayerPurse(): Hapi.ServerRoute;
    /**
     * Debit player by a specific amount
     */
    static debitPlayer(): Hapi.ServerRoute;
    /**
     * Credit player with a specific amount
     */
    static creditPlayer(): Hapi.ServerRoute;
    /**
     * Retrieve purse of the current player
     */
    static getPurse(): Hapi.ServerRoute;
    /**
     * Set purse of the current player
     */
    static setPurse(): Hapi.ServerRoute;
    /**
     * Debit current player with a specific amount
     */
    static debit(): Hapi.ServerRoute;
    /**
     * Credit player with a specific amount
     */
    static credit(): Hapi.ServerRoute;
    /**
     * Deletes a specific player
     */
    static deletePlayer(): Hapi.ServerRoute;
    /**
     * Creates a player
     */
    static createPlayer(): Hapi.ServerRoute;
    /**
     * legacy search player route
     */
    static legacyPlayerRoute(): Hapi.ServerRoute;
}
