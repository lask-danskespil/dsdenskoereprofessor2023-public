/// <reference types="node" />
import type { PassThrough } from "stream";
export declare function std(type: string, strs: string[]): void;
export declare function stdout(strs: string | string[]): void;
export declare function stderr(err: Error): void;
export interface IStringDictionary<T> {
    [index: string]: T;
}
export interface INumberDictionary<T> {
    [index: number]: T;
}
/**
 * Returns the referer parameters (URL of the caller)
 * @param referer: the referer's string
 */
export declare function getRefererParameters(referer: string): IStringDictionary<string>;
export declare let isTest: boolean;
export declare function setIsTest(value: boolean): void;
export declare function clearStream(stream: PassThrough): void;
