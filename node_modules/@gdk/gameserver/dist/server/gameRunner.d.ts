import * as Hapi from "@hapi/hapi";
interface IOptions {
    port?: number;
    gameDirectory?: string;
    gameConf?: string;
    services?: {
        [serviceName: string]: string;
    };
}
export declare class GameRunner {
    server: Hapi.Server;
    private _gameConfig;
    private _gameDir;
    private _jackpotsRoutes;
    private _betManager;
    private _motorsScriptsManager;
    private _gamifSessionManager;
    private _gameSessionDB;
    private _multipassManager;
    /**
     * Initialize & start game server
     * @param port
     * @param options (lauched from command options will already be set with default values)
     */
    execute(options?: IOptions): Promise<void>;
    /**
     * Start server.
     */
    start(): Promise<void>;
    /**
     * Stop server.
     */
    stop(): Promise<void>;
    /**
     * Get ips listened by server.
     */
    get ips(): string[];
    private _configureServer;
    private _onGameConfigChanged;
    private _registerService;
}
export {};
