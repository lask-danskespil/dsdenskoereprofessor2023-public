export interface IBetAmount {
    currency: string;
    value: number;
}
export declare enum EBetMode {
    AUTO = "BET_AUTO_CLAIM",
    MANUAL = "BET_MANUAL_CLAIM"
}
export interface IBetRequest {
    amount: IBetAmount;
    gameName: string;
    demo: boolean;
    betMode: EBetMode;
}
export interface IBetError {
    errorCode: string;
    errorMessage: string;
}
export interface IBetErrorResponse extends IBetError {
    bet: IBetRequest;
}
export interface IBetErrorResponse extends IBetError {
    bet: IBetRequest;
}
export interface IBetTicket {
    /**
     * The id of the ticket.
     */
    id: number;
    /**
     * The bet amount (stake) used for the ticket.
     */
    betAmount: IBetAmount;
    /**
     * Won Amout for the ticket
     */
    wonAmount: IBetAmount;
    /**
     * The symbol of the ticket.
     */
    symbol: string;
    /**
     * The custom revelations datas of the ticket sent in the bet/update.
     */
    revelationData: any;
    /**
     * The status of the ticket
     */
    status: string;
    openedTime: string;
    claimedTime: string;
    receiptId: string;
    demo: boolean;
    serviceName: string;
}
export interface IBetValidResponse {
    /**
     * Amount won
     */
    wonAmount: IBetAmount;
    /**
     * The ticket data (symbol, etc.).
     */
    data: IBetTicket;
    /**
     * The receipt id of the ticket.
     */
    receiptId: string;
    /**
     * Is demo
     */
    demo: boolean;
    /**
     * Server messages
     */
    serverMessage: Array<{
        id: string;
    }>;
}
export type BetReturnType = IBetErrorResponse | IBetValidResponse;
