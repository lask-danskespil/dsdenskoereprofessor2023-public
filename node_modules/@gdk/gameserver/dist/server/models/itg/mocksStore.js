"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MocksStore = void 0;
class MocksStore {
    constructor() {
        this._data = {};
    }
    /**
     * Retrive next mock values for a given service and a given player
     * @param serviceName
     * @param player
     */
    getNext(serviceName, playerId) {
        if (this._data[serviceName] &&
            this._data[serviceName][playerId] &&
            this._data[serviceName][playerId].length > 0) {
            return this._data[serviceName][playerId].shift();
        }
        else {
            return null;
        }
    }
    /**
     * Retrive all mocks values registered for a given service and a given player
     * @param serviceName
     * @param player
     */
    get(serviceName, playerId) {
        if (this._data[serviceName] &&
            this._data[serviceName][playerId] &&
            this._data[serviceName][playerId].length > 0) {
            return this._data[serviceName][playerId];
        }
        else {
            return [];
        }
    }
    /**
     * Add some mocks values for future bets for a given service and a given player
     * @param serviceName
     * @param player
     * @param mocks
     */
    add(serviceName, playerId, mocks) {
        if (!this._data[serviceName]) {
            this._data[serviceName] = {};
        }
        if (!this._data[serviceName][playerId]) {
            this._data[serviceName][playerId] = [];
        }
        this._data[serviceName][playerId].push(...mocks);
    }
    /**
     * Erase all mocks values for a given service and a given player
     * @param serviceName
     * @param player
     */
    remove(serviceName, playerId) {
        if (this._data[serviceName] && this._data[serviceName][playerId]) {
            delete this._data[serviceName][playerId];
        }
    }
}
exports.MocksStore = MocksStore;
//# sourceMappingURL=mocksStore.js.map