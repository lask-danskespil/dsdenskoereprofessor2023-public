import type { IUniverInstance } from "../universeData";
export declare function getUniverse(univerId: string, nbSample?: number): IUniverInstance;
export { UniversData } from "../universeData";
export declare function addUniver(name: string, data: any[]): void;
/** Aims to replace groovy <=> operator */
export declare function spaceshipOperator(a: number, b: number): number;
export declare function sendError(code: string, msg: string): void;
export declare function addInResult(key: string, value: any): void;
export declare function multipleSampleWoutReplacement(univerId: string, nbSample: number): number[];
export declare function multipleSampleWReplacement(univerId: string, nbSample: number): number[];
export declare function sampleWoutReplacement(univerId: string): number;
export declare function sampleWReplacement(univerId: string): number;
export declare function setCurrentGain(_amount: number): void;
export declare function payAmount(amount?: number): void;
export declare function removeUniver(univerId: string): void;
export declare function resetUniver(univerId: string): void;
export declare function shuffle(data: number[]): void;
export declare function shuffle2(data: number[]): number[];
export declare function rand(min: number, max: number): number;
export declare function logDebug(message: string): void;
export declare function formatDate(dateTime: number): string;
export declare function currency(): string;
export declare function formatCurrency(amount: number, currencyCode: string): string;
/**
 * Notify function of gamification
 *
 * @access public
 * @param {string} eventName, The event name
 * @param {any} value, The event data
 */
export declare function notify(eventName: string, value: any): void;
