import type GameModel from "./gameModel";
import type { IGameSession } from "../gameSession";
import type { IGamifSession } from "../../gamif/gamifSession";
export default class StateMachine {
    private gameModel;
    private currentState;
    constructor(gameModel: GameModel);
    /**
     * Init;
     * @param session
     * @param gamifSession
     * @param params
     */
    doInit(session: IGameSession, gamifSession: IGamifSession, params: object): Promise<void>;
    /**
     * Get state.
     */
    get state(): string;
    /**
     * Reset.
     */
    reset(): void;
    /**
     * Set state.
     * @param stateName
     */
    setState(stateName: string): void;
    /**
     * Listen event.
     * @param event
     * @param session
     * @param gamifSession
     * @param params
     */
    on(event: string, session: IGameSession, gamifSession: IGamifSession, params: any): Promise<void>;
    /**
     * Statics
     */
    private static instances;
    /**
     * Get instance.
     * @param sessionId
     */
    static get(sessionId: string): StateMachine;
    /**
     * Set instance.
     * @param stateMachine
     * @param sessionId
     */
    static set(stateMachine: StateMachine, sessionId: string): void;
    /**
     * Remove instance.
     * @param sessionId
     */
    static remove(sessionId: string): void;
}
