import type GameModel from "./gameModel";
export default class Transition {
    private xmlSnippet;
    private gameModel;
    constructor(xmlSnippet: any, gameModel: GameModel);
    /**
     * Check if has trigger.
     */
    hasTrigger(): boolean;
    /**
     * Trigger.
     * @param params
     */
    trigger(params: object): Promise<boolean>;
    /**
     * Do Action.
     * @param params
     */
    action(params: object): Promise<string>;
    /**
     * To.
     */
    get to(): string;
    /**
     * Find transition.
     * @param transitions
     * @param params
     */
    static findTransition(transitions: Transition[], params: any): Promise<Transition>;
    /**
     * Get event transition.
     * @param gameModel
     * @param xmlSnippet
     * @param event
     * @param params
     */
    static getEventTransition(gameModel: GameModel, xmlSnippet: object, event: string, params: any): Promise<Transition>;
    /**
     * Get decision transition.
     * @param gameModel
     * @param decisionXmlSnippet
     * @param params
     */
    static getDecisionTransition(gameModel: GameModel, decisionXmlSnippet: object, params: any): Promise<Transition>;
    /**
     * Map transitions.
     * @param gameModel
     * @param xmlSnippet
     * @param event
     */
    static mapTransitions(gameModel: GameModel, xmlSnippet: any, event?: string): Transition[];
}
