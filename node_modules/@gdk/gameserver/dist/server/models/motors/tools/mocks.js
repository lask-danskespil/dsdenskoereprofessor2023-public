"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class MotorsMocks {
    /**
     * Get motors mock.
     */
    static get() {
        if (!MotorsMocks.instance) {
            const instance = new MotorsMocks();
            MotorsMocks.instance = instance;
        }
        return MotorsMocks.instance;
    }
    constructor() {
        this._mocksValues = {};
    }
    /**
     * Get next mock value.
     * @param gameModelId
     */
    getNextMockValue(gameModelId) {
        if (this._mocksValues[gameModelId] &&
            Array.isArray(this._mocksValues[gameModelId]) &&
            this._mocksValues[gameModelId].length) {
            return this._mocksValues[gameModelId].shift();
        }
        return undefined;
    }
    /**
     * Get mocks.
     * @param gameModelId
     */
    getMocks(gameModelId) {
        if (!this._mocksValues[gameModelId] || !Array.isArray(this._mocksValues[gameModelId])) {
            return [];
        }
        return this._mocksValues[gameModelId];
    }
    /**
     * Add mocks.
     * @param gameModelId
     * @param values
     */
    addMocks(gameModelId, values) {
        if (!this._mocksValues[gameModelId] || !Array.isArray(this._mocksValues[gameModelId])) {
            this._mocksValues[gameModelId] = [];
        }
        this._mocksValues[gameModelId] = this._mocksValues[gameModelId].concat(values);
    }
    /**
     * Reset mocks.
     * @param gameModelId
     */
    resetMocks(gameModelId) {
        this._mocksValues[gameModelId] = [];
    }
}
exports.default = MotorsMocks;
//# sourceMappingURL=mocks.js.map