"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationEngine = void 0;
const models_1 = require("../models");
class NotificationEngine {
    /**
     * Constructor
     * @param _room the room containing persons and players to notify
     */
    constructor(room) {
        this._room = room;
    }
    /**
     * Notify all or a single player (script notification)
     * @param data the notification data
     * @param playerId optional player identifier
     */
    notify(data, playerId) {
        this.backendNotify(models_1.EPushNotificationType.SCRIPT, data, playerId);
    }
    /**
     * Notify all or a single player
     * @param type the notification type
     * @param data the notification data
     * @param playerId optional player identifier
     */
    backendNotify(type, data, playerId) {
        if (!data) {
            throw { message: "Data must not be null or undefined", code: 500 };
        }
        const channels = [];
        if (playerId !== undefined) {
            const player = this._room.currentSession.players.find((p) => p.id === playerId);
            if (player) {
                channels.push(player.channel);
            }
        }
        else {
            channels.push(...this._room.people.map((p) => p.channel));
        }
        // If current action, then add this notification to the session Db
        if (this._room.gameEngine.currentAction) {
            this._room.gameEngine.currentAction.notifications.push({
                data,
                type,
                timestamp: this._room.gameEngine.getSessionAge(),
                playerId,
            });
        }
        this.sendData(type, data, channels, playerId === undefined);
    }
    // Sends the data
    sendData(type, data, channels, broadcast) {
        channels.forEach((c) => {
            if (c && c.stream) {
                c.push(type, data, this._room.currentSession.id, broadcast);
            }
        });
    }
}
exports.NotificationEngine = NotificationEngine;
//# sourceMappingURL=notificationEngine.js.map