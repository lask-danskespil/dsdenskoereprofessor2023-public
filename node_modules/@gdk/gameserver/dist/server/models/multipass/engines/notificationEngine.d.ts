import { EPushNotificationType } from "../models";
import type { Room } from "../room";
export interface IBaseNotificationData {
    type?: string;
    observersCount?: number;
    playersCount?: number;
    sessionState?: string;
    [index: string]: any;
}
export declare class NotificationEngine {
    private _room;
    /**
     * Constructor
     * @param _room the room containing persons and players to notify
     */
    constructor(room: Room);
    /**
     * Notify all or a single player (script notification)
     * @param data the notification data
     * @param playerId optional player identifier
     */
    notify<T extends IBaseNotificationData>(data: T, playerId?: string): void;
    /**
     * Notify all or a single player
     * @param type the notification type
     * @param data the notification data
     * @param playerId optional player identifier
     */
    backendNotify<T extends IBaseNotificationData>(type: EPushNotificationType, data: T, playerId?: string): void;
    private sendData;
}
