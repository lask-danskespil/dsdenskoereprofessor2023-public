import { readJSONSync } from "fs-extra";
import { resolve } from "path";

export interface IPackageJson {
	name: string;
	keywords: string[];
	version: string;
	description: string;
	provider: string;
}

export class PackageJson<T extends IPackageJson> {
	public content: T;

	public constructor(packageDirectory: string) {
		this._load(packageDirectory);
	}

	private _load(packageDirectory: string): void {
		try {
			this.content = readJSONSync(resolve(packageDirectory, "package.json"));
		} catch (err) {
			throw new Error(`Failed to load package.json: ${err.message}`);
		}
	}

	/**
	 * Returns name with group (if group is defined)
	 */
	public get fullName(): string {
		return this.content.name;
	}

	/**
	 * Returns name only (without any group).
	 * For theme, the theme name MUST be provided
	 */
	public get name(): string {
		return this.content.name.replace(/^@.*\//, ""); // remove group name, like @gdk/
	}

	/**
	 * Get delivery version.
	 */
	public get version(): string {
		return this.content.version;
	}
}
