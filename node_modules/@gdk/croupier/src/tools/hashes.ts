import { createHash } from "crypto";
import type { ICroupier } from "@gdk/backutils";

export interface IHashes {
	symbols: string;
	prizes: string;
}

export function computeHashes(croupier: ICroupier): IHashes {
	let symbolHash = "";
	let prizeTableHash = `${croupier.renewal}${croupier.baseStake}`;

	for (const rank of croupier.ranks) {
		prizeTableHash += `${rank.renewal}${rank.id}${rank.factor.numerator / rank.factor.denominator}`;
		for (const ticket of rank.tickets) {
			symbolHash += `${ticket.symbol}`;
			prizeTableHash += `${ticket.symbol}${ticket.quantity}`;
		}
	}

	return {
		symbols: createHash("md5").update(symbolHash).digest("hex"),
		prizes: createHash("md5").update(prizeTableHash).digest("hex"),
	};
}
