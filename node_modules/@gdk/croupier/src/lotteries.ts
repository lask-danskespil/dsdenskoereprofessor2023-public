import type { ICroupierConfig } from "@gdk/backutils";

export interface IConvertConfig {
	// if true or undefined, rank without prizeDescription will get a description,
	// describing the amount won based on the baseStake
	prizeDescriptions?: boolean;

	// activate / deactivate depleting pools.
	// if true: renewal must be set in the final dealer (raises an error if not)
	// if false: renewal is forbidden the final dealer (raises an error if set)
	depleting: boolean;

	// if set, this lambda is used to set the default dealer renewal. It still can
	// be overriden by the configuration renewal value.
	computeRenewal?: (poolSize: number) => number;

	// lottery default currency
	currency: string;

	// if set, this lambda is used by initConfig to transform  rank ids from the
	// source file into rank ids in the configuration file
	initConfig?: (croupier: ICroupierConfig) => void;
}

export const CONVERT_CONFIGS: { [lotteryCode: string]: IConvertConfig } = {
	SVS: {
		prizeDescriptions: false,
		currency: "SEK",
		depleting: true,
		computeRenewal: (poolSize: number) => Math.floor(0.2 * poolSize),
		initConfig: stackNullRank,
	},
	DS: {
		currency: "DKK",
		depleting: false,
		initConfig: stackNullRank,
	},
	EESTI: {
		currency: "EUR",
		depleting: false,
	},
	FDJ: {
		currency: "EUR",
		depleting: true,
		computeRenewal: (poolSize: number) => poolSize - 1,
		initConfig: addConfigInfos,
	},
	NT: {
		currency: "NOK",
		depleting: false,
	},
	LOR: {
		currency: "CHF",
		depleting: true,
		computeRenewal: (poolSize: number) => Math.floor(0.1 * poolSize),
		initConfig: shiftNullRank,
	},
};

// initConfigRankIds strategy: if a rank has rank 0, change its id to be the last one
// ex: rank id [0, 1, 2, 3] => rank ids [1, 2, 3, 4], rank id 0 became 4
function stackNullRank(config: ICroupierConfig): void {
	const nullRankIndex = config.ranks.findIndex((rank) => rank.id === 0);
	if (nullRankIndex >= 0) {
		config.ranks[nullRankIndex].id = config.ranks.length;
	}
}

// initConfigRankIds strategy: if a rank has rank 0, shift every ranks by adding 1 to their ids
// ex: rank id [0, 1, 2, 3] => rank ids [1, 2, 3, 4], rank id 0 became 1
function shiftNullRank(config: ICroupierConfig): void {
	if (config.ranks.some((rank) => rank.id === 0)) {
		for (const rank of config.ranks) {
			rank.id += 1;
		}
	}
}

function addConfigInfos(config: ICroupierConfig): void {
	if (config.infos === undefined) {
		config.infos = {
			bicCode: 0,
			serviceName: "",
			serviceCode: "",
			engineCode: "ITG",
			description: "",
			type: "Interactif",
		};

		appendRanksAtEnd(config);
	}
}

// modify given config to append "ranks" key / value in last position in the config.
// Even if order if not guaranteed in objects, node does preserve key / value order,
// and we prefer ranks to be at the end.
export function appendRanksAtEnd(config: ICroupierConfig): void {
	const ranks = config.ranks;
	delete config.ranks;
	config.ranks = ranks;
}
