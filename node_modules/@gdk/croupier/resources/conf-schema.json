{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"title": "Croupier conf schema",
	"description": "Croupier conf schema",
	"required": [
		"masterGameCode",
		"code",
		"baseStake",
		"ranks",
		"seed"
	],
	"properties": {
		"description": {
			"$id": "#/properties/description",
			"type": "string",
			"title": "The description",
			"description": "Croupier description",
			"maxLength": 8192
		},
		"masterGameCode": {
			"type": "string",
			"description": "Name of the master game this dealer is made for.",
			"maxLength": 64,
			"minLength": 2
		},
		"code": {
			"$id": "#/properties/code",
			"type": "string",
			"title": "The engine game code",
			"description": "Service name used for requesting a ticket",
			"maxLength": 64,
			"minLength": 2
		},
		"renewal": {
			"$id": "#/properties/renewal",
			"type": "integer",
			"title": "The renewal",
			"description": "After how many tickets the pool is renewed. Optionnal, will be set to a FDJ default value if not present"
		},
		"multiplyQuantitiesBy": {
			"type": "integer",
			"title": "quantity multiplier",
			"description": "If set all ticket quantities will be multiplied by this value"
		},
		"baseStake": {
			"type": "integer",
			"description": "Smaller stake value threshold. Every stake which is a multiple of this value is allowed as a betValue"
		},
		"sourceFile": {
			"type": "string",
			"description": "Croupier source file path (if one), relative to the configuration file path",
			"maxLength": 8192
		},
		"symbolClass": {
			"type": "string",
			"description": "symbol class path (if one).",
			"maxLength": 300
		},
		"ticketClass": {
			"type": "string",
			"description": "Ticket class path (if one).",
			"maxLength": 300
		},
		"ranks": {
			"$id": "#/properties/ranks",
			"type": "array",
			"title": "The ranks schema",
			"description": "An explanation about the purpose of this instance.",
			"additionalItems": true,
			"items": {
				"anyOf": [
					{
						"$id": "#/properties/ranks/items/anyOf/0",
						"type": "object",
						"title": "The first anyOf schema",
						"description": "An explanation about the purpose of this instance.",
						"required": ["id", "factor"],
						"optional": [
							"prizeType",
							"prizeDescription",
							"renewal"
						],
						"properties": {
							"id": {
								"$id": "#/properties/ranks/items/anyOf/0/properties/id",
								"type": "integer",
								"title": "The id",
								"description": "The rank id",
								"minimum": 0
							},
							"prizeType": {
								"$id": "#/properties/ranks/items/anyOf/0/properties/prizeType",
								"type": "string",
								"title": "The prizeType",
								"description": "The prizeType for specific prize"
							},
							"prizeDescription": {
								"$id": "#/properties/ranks/items/anyOf/2/properties/prizeDescription",
								"type": "string",
								"title": "The prizeDescription",
								"description": "A description of the prize for specific cases"
							},
							"factor": {
								"$id": "#/properties/ranks/items/anyOf/0/properties/factor",
								"type": "object",
								"title": "The factor",
								"description": "Factor of the stake for the win",
								"required": ["numerator", "denominator"],
								"properties": {
									"numerator": {
										"$id": "#/properties/ranks/items/anyOf/0/properties/factor/properties/numerator",
										"type": "integer",
										"title": "The numerator",
										"description": "Factor's numerator",
										"minimum": 0,
										"maximum": 1000000000
									},
									"denominator": {
										"$id": "#/properties/ranks/items/anyOf/0/properties/factor/properties/denominator",
										"type": "integer",
										"title": "The denominator",
										"description": "Factor's denominator",
										"minimum": 1,
										"maximum": 1000000000
									}
								}
							},
							"renewal": {
								"$id": "#/properties/ranks/items/anyOf/0/properties/renewal",
								"type": "integer",
								"title": "The renewal",
								"description": "After how many ticket this rank is renewed. Optionnal, will be set to a FDJ default value if not present.",
								"minimum": 0
							},
							"shapes": {
								"$id": "#/properties/ranks/items/anyOf/0/properties/shapes",
								"type": "array",
								"title": "The shapes",
								"description": "All rank's shapes",
								"additionalItems": true,
								"items": {
									"anyOf": [
										{
											"$id": "#/properties/ranks/items/anyOf/0/properties/shapes/items/anyOf/0",
											"type": "object",
											"title": "The Shape",
											"description": "The shape properties",
											"required": [
												"quantity",
												"value",
												"dbRecordQuantity"
											],
											"additionalProperties": true,
											"properties": {
												"quantity": {
													"$id": "#/properties/ranks/items/anyOf/0/properties/shapes/items/anyOf/0/properties/quantity",
													"type": "integer",
													"title": "The quantity",
													"description": "How many different tickets to create",
													"minimum": 0
												},
												"value": {
													"$id": "#/properties/ranks/items/anyOf/0/properties/shapes/items/anyOf/0/properties/value",
													"type": "string",
													"title": "The value",
													"description": "The shape description"
												},
												"dbRecordQuantity": {
													"$id": "#/properties/ranks/items/anyOf/0/properties/shapes/items/anyOf/0/properties/dbRecordQuantity",
													"type": "integer",
													"title": "The dbRecordQuantity",
													"description": "How many tickets in data base",
													"minimum": 0
												}
											}
										}
									],
									"$id": "#/properties/ranks/items/anyOf/0/properties/shapes/items"
								}
							}
						}
					}
				],
				"$id": "#/properties/ranks/items"
			}
		},
		"parameters": {
			"type": "object",
			"description": "free object to store usefull parameters for generation"
		},
		"infos": {
			"$id": "#/properties/infos",
			"type": "object",
			"title": "Usr infos",
			"description": "Usr infos",
			"required": [
				"bicCode",
				"serviceName",
				"serviceCode",
				"type"
			],
			"properties": {
				"bicCode": {
					"$id": "#/properties/infos/properties/bicCode",
					"type": "integer",
					"title": "The bicCode",
					"description": "Code used for accounting",
					"minimum": 0
				},
				"serviceName": {
					"$id": "#/properties/infos/properties/serviceName",
					"type": "string",
					"title": "The serviceName",
					"description": "The serviceName is used as a code for using the game",
					"maxLength": 63
				},
				"serviceCode": {
					"$id": "#/properties/infos/properties/serviceCode",
					"type": "string",
					"title": "The serviceCode",
					"description": "The game trigram",
					"maxLength": 3
				},
				"type": {
					"$id": "#/properties/infos/properties/type",
					"type": "string",
					"title": "The type",
					"description": "The game type (Grattage, ...)",
					"maxLength": 512
				},
				"engineCode": {
					"type": "string",
					"enum": ["ITG", "ITF"]
				}
			}
		},
		"seed": {
			"type": "string",
			"description": "seed used for random to generate the dealer. with a constant seed, the generated output will be stable."
		}
	}
}
