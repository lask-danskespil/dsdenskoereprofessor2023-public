{"version":3,"sources":["webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/fdj/views/lockView.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/veikkaus/index.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/veikkaus/views/inGameView.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/veikkaus/views/introductionView.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/veikkaus/views/loadingView.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/veikkaus/views/lockView.ts"],"names":[],"mappings":"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","file":"gamekit.vks.js","sourcesContent":["import i18n from \"i18next\";\nimport { EOrientation } from \"@gdk/core\";\nimport { LoadedView } from \"@gdk/core-pixi\";\nimport type { TextField } from \"@gdk/core-pixi\";\nimport type { Container } from \"pixi.js\";\n\nexport class LockView extends LoadedView {\n\t// Public members\n\tpublic portrait: Container = null;\n\tpublic landscape: Container = null;\n\n\tpublic text: TextField = null;\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Sets the orientation of the game and then what message to show\n\t */\n\tpublic set orientation(orientation: EOrientation) {\n\t\tif (orientation === EOrientation.Landscape) {\n\t\t\t// Landscape\n\t\t\tthis.landscape.visible = true;\n\t\t\tthis.portrait.visible = false;\n\n\t\t\tthis.text.text = i18n.t(\"vi.orientationHint\", {\n\t\t\t\treplace: {\n\t\t\t\t\torientation: i18n.t(\"vi.orientation.landscape\"),\n\t\t\t\t\tdevice: i18n.t(\"vi.device.mobile\"),\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (orientation === EOrientation.Portrait) {\n\t\t\t// Portrait\n\t\t\tthis.landscape.visible = false;\n\t\t\tthis.portrait.visible = true;\n\n\t\t\tthis.text.text = i18n.t(\"vi.orientationHint\", {\n\t\t\t\treplace: {\n\t\t\t\t\torientation: i18n.t(\"vi.orientation.portrait\"),\n\t\t\t\t\tdevice: i18n.t(\"vi.device.mobile\"),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * On load view\n\t */\n\tpublic onLoad(): void {\n\t\t// Force visible\n\t\tthis.visible = true;\n\t}\n}\n","export * from \"./views/loadingView\";\nexport * from \"./views/introductionView\";\nexport * from \"./views/inGameView\";\nexport * from \"./views/lockView\";\n","import type { Sprite } from \"pixi.js\";\nimport { LoadedView } from \"@gdk/core-pixi\";\n\nimport type { IAdaptativeInGameView } from \"../../../identity\";\nimport type { AdaptativeVisualIdentity } from \"../../../adaptativeVisualIdentity\";\n\nexport class InGameView extends LoadedView implements IAdaptativeInGameView {\n\tprotected _soundEnabled: boolean = true;\n\n\tprotected vi: AdaptativeVisualIdentity;\n\n\t/**\n\t * this attributes exists only to fit with IAdaptativeInGameView interface.\n\t * VKS VI does not have a setting component (everything is handled by front)\n\t */\n\tpublic readonly settingsComponent = undefined;\n\n\t/**\n\t * Constructor.\n\t * @param vi the adaptative visual identity reference\n\t */\n\tpublic constructor(vi: AdaptativeVisualIdentity) {\n\t\tsuper();\n\t\tthis.vi = vi;\n\t}\n\n\tpublic onLoad(): void {\n\t\t// do nothing; this method is required by VI view loader\n\t}\n\n\t/**\n\t * On the view will appear\n\t */\n\tpublic onWillAppear(): void {\n\t\tif (!this.vi.parameters.hideInGameView) {\n\t\t\tthis.visible = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns if the sound is enabled\n\t */\n\tpublic get soundEnabled(): boolean {\n\t\treturn this._soundEnabled;\n\t}\n\n\t/**\n\t * Sets if the sound is enabled\n\t */\n\tpublic set soundEnabled(enabled: boolean) {\n\t\tthis._soundEnabled = enabled;\n\t}\n}\n","import type { Sprite } from \"pixi.js\";\nimport { LoadedView, pDelayedCall } from \"@gdk/core-pixi\";\n\nimport type { IAdaptativeIntroductionView } from \"../../../identity\";\nimport type { AdaptativeVisualIdentity } from \"../../../adaptativeVisualIdentity\";\n\nexport class IntroductionView extends LoadedView implements IAdaptativeIntroductionView {\n\tprotected logo: Sprite = null;\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor(protected vi: AdaptativeVisualIdentity) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * On load view\n\t */\n\tpublic onLoad(): void {\n\t\tthis.logo.visible = true;\n\t}\n\n\t/**\n\t * Animate the view\n\t * @param nextState launch the next state\n\t */\n\tpublic async animate(nextState: () => void): Promise<void> {\n\t\tif (!this.vi.parameters.skipIntroduction) {\n\t\t\tthis.logo.visible = true;\n\n\t\t\tawait pDelayedCall(3);\n\t\t}\n\n\t\tnextState();\n\t}\n\n\t/**\n\t * On the view will appear\n\t */\n\tpublic onWillAppear(): void {\n\t\tthis.visible = !this.vi.parameters.skipIntroduction;\n\t}\n}\n","import { Graphics } from \"pixi.js\";\nimport type { mesh } from \"pixi.js\";\nimport { LoadedView } from \"@gdk/core-pixi\";\nimport type { TextField } from \"@gdk/core-pixi\";\n\nimport type { IAdaptativeLoadingView } from \"../../../identity\";\nimport type { AdaptativeVisualIdentity } from \"../../../adaptativeVisualIdentity\";\n\nexport class LoadingView extends LoadedView implements IAdaptativeLoadingView {\n\t/**\n\t * Defines the references to the grqphic elements.\n\t */\n\tpublic loaderHandle: mesh.NineSlicePlane = null;\n\tpublic progress: TextField = null;\n\n\tprivate _loadingMask: Graphics = null;\n\n\t/**\n\t * Constructor\n\t * @param vi the adaptative visual identity\n\t */\n\tpublic constructor(protected vi: AdaptativeVisualIdentity) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * On load view\n\t */\n\tpublic onLoad(): void {\n\t\t// Create loading mask\n\t\tthis._loadingMask = new Graphics();\n\n\t\tthis.loaderHandle.mask = this._loadingMask;\n\t\tthis.loaderHandle.addChild(this._loadingMask);\n\t}\n\n\t/**\n\t * Defines the function called each time a file is loaded\n\t * @param percentage the percentage of files already loaded\n\t */\n\tpublic onProgress(percentage: number): void {\n\t\tthis._loadingMask.clear();\n\t\tthis._loadingMask.beginFill(0xffffff);\n\t\tthis._loadingMask.drawRect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.loaderHandle.width * (percentage / 100),\n\t\t\tthis.loaderHandle.height\n\t\t);\n\t\tthis._loadingMask.endFill();\n\n\t\tthis.progress.text = `${percentage}%`;\n\t}\n\n\t/**\n\t * On the view will disappear\n\t */\n\tpublic onWillDisappear(): void {\n\t\tthis.visible = false;\n\t}\n}\n","import { EOrientation } from \"@gdk/core\";\n\nimport { LockView as BaseLockView } from \"../../fdj/views/lockView\";\nimport type { AdaptativeVisualIdentity } from \"../../../adaptativeVisualIdentity\";\n\nexport class LockView extends BaseLockView {\n\t/**\n\t * Constructor\n\t * @param vi the adaptative visual identity reference\n\t */\n\tpublic constructor(protected vi: AdaptativeVisualIdentity) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * On load view\n\t */\n\tpublic onLoad(): void {\n\t\t// To avoid default process\n\t}\n\n\t/**\n\t * Sets the orientation of the game and then what message to show\n\t */\n\tpublic set orientation(orientation: EOrientation) {\n\t\tif (orientation !== EOrientation.Both) {\n\t\t\tthrow new Error(`VKS lockview does only handle \"Both\" orientation`);\n\t\t}\n\t}\n}\n"],"sourceRoot":""}