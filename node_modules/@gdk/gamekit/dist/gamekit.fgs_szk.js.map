{"version":3,"sources":["webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/fgs_szk/index.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/fgs_szk/views/inGameView.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/fgs_szk/views/introductionView.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/fgs_szk/views/loadingView.ts","webpack://@gdk/gamekit/src/builds/gdk/framework/modules/gamekit/src/adaptativeVisualIdentity/identities/fgs_szk/views/lockView.ts"],"names":[],"mappings":"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","file":"gamekit.fgs_szk.js","sourcesContent":["export * from \"./views/loadingView\";\nexport * from \"./views/introductionView\";\nexport * from \"./views/inGameView\";\nexport * from \"./views/lockView\";\n","import type { Container } from \"pixi.js\";\n\nimport * as fgs from \"../../fgs\";\nimport { EVisualIdentityEvent } from \"../../../events\";\n\nexport class InGameView extends fgs.InGameView {\n\t/**\n\t * Settings component (popin) (from the editor)\n\t */\n\tpublic watermarkContainerTop: Container = null;\n\tpublic watermarkContainerBottom: Container = null;\n\n\t/**\n\t * Called once the view is loaded\n\t */\n\tpublic onLoad(): void {\n\t\tsuper.onLoad();\n\n\t\tthis.vi.emitter.on(EVisualIdentityEvent.AboutGame, () => {\n\t\t\tthis.vi.game.com.bridge.executeAction(\"GAME_RULES\");\n\t\t});\n\n\t\tif (this.watermarkContainerTop) {\n\t\t\tthis.watermarkContainerTop.visible = false;\n\t\t}\n\t\tif (this.watermarkContainerBottom) {\n\t\t\tthis.watermarkContainerBottom.visible = false;\n\t\t}\n\t}\n}\n","import * as fgs from \"../../fgs\";\n\nexport class IntroductionView extends fgs.IntroductionView {\n\t/**\n\t * On load view\n\t */\n\tpublic onLoad(): void {\n\t\tsuper.onLoad();\n\t}\n}\n","import { Sprite, Graphics, Texture, CanvasRenderer, WebGLRenderer, Point } from \"pixi.js\";\nimport { Circ, TimelineMax, TweenMax } from \"gsap\";\nimport { pDelayedCall } from \"@gdk/core-pixi\";\nimport type { Container } from \"pixi.js\";\n\nimport * as fgs from \"../../fgs\";\n\nexport class LoadingView extends fgs.LoadingView {\n\t/**\n\t * 3 faces for Sazka loader\n\t */\n\tprotected faceLeft: Container = null;\n\tprotected faceRight: Container = null;\n\tprotected faceCenter: Container = null;\n\n\t/**\n\t * On the view will appear\n\t */\n\tpublic onWillAppear(): void {\n\t\tthis.visible = true;\n\t\tthis.fly(this.faceRight);\n\t\tpDelayedCall(0.3).then(() => {\n\t\t\tthis.fly(this.faceCenter);\n\t\t});\n\t\tpDelayedCall(0.6).then(() => {\n\t\t\tthis.fly(this.faceLeft);\n\t\t});\n\t}\n\n\tprivate fly(smilley: Container): void {\n\t\tTweenMax.to(smilley.docking, 0.5, {\n\t\t\ty: -150,\n\t\t\tease: Circ.easeOut,\n\t\t\tonComplete: (): void => {\n\t\t\t\tthis.fall(smilley);\n\t\t\t},\n\t\t});\n\t\tsmilley.getChildByName(\"open\").visible = true;\n\t\tsmilley.getChildByName(\"close\").visible = false;\n\t}\n\n\tprivate fall(smilley: Container): void {\n\t\tTweenMax.to(smilley.docking, 0.5, {\n\t\t\ty: 0,\n\t\t\tease: Circ.easeIn,\n\t\t\tonComplete: (): void => {\n\t\t\t\tthis.fly(smilley);\n\t\t\t},\n\t\t});\n\t\tsmilley.getChildByName(\"open\").visible = false;\n\t\tsmilley.getChildByName(\"close\").visible = true;\n\t}\n\n\t/**\n\t * Defines the function called each time a file is loaded\n\t * @param percentage the percentage of files already loaded\n\t */\n\tpublic onProgress(percentage: number): void {\n\t\tthis.percentage.text = `<numbers>${percentage}</numbers>%`;\n\t}\n\n\t/**\n\t * On the view will disappear\n\t */\n\tpublic onWillDisappear(): void {\n\t\tthis.visible = false;\n\t}\n}\n","import * as fgs from \"../../fgs\";\n\nexport class LockView extends fgs.LockView {}\n"],"sourceRoot":""}