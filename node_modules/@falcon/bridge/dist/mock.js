/*! For license information please see mock.js.LICENSE.txt */
(self.webpackChunkfalcon=self.webpackChunkfalcon||[]).push([["mock"],{"./assets/mock.js":function(t,e,c){c("./assets/mock.css");var i=function(t,e){for(var c=0;c<t.classList.length;c++)t.classList.remove(t.classList[c]);t.classList.add(e)};window.setMock=function(t,e,c){"MTR"===e?function(t,e,c){document.body.appendChild(function(t){var e=document.createElement("div"),c='<div id="mock">';return c+='   <div id="mock-control-panel">',c+='   \t<div id="mock-left-right">',c+="   \t\tLeft",c+="   \t</div>",c+='   \t<div id="mock-show-hide">',c+="       \tShow",c+="   \t</div>",c+='\t\t<div id="mock-delete">',c+="\t\t\tDelete",c+="\t\t</div>",c+="   </div>",c+='   <div id="mock-tabs">',c+='       <div class="tab active" id="manual">',c+="           Manuel",c+="       </div>",c+='       <div class="tab" id="script">',c+="           Script",c+="       </div>",c+="   </div>",c+='   <div id="mock-content-tabs">',c+='       <div class="tab active" id="manual-tab">',c+='           <div class="input-group">',c+="               <label>",c+="                   Service Name :",c+="               </label>",c+='               <input type="text" value="'+t+'" id="service-name" />',c+="           </div>",c+='           <div class="input-group">',c+="               <label>",c+="                   Mock :",c+="               </label>",c+='               <input type="text" id="manual-mock" />',c+="           </div>",c+="       </div>",c+='       <div class="tab" id="script-tab">',c+='           <div class="input-group">',c+="               <label>",c+="                   Script :",c+="               </label>",c+='               <textarea id="script-mock"></textarea>',c+="           </div>",c+="       </div>",c+="   </div>",c+='   <div id="mock-actions">',c+='       <input type="button" value="Send" id="send-mock" />',c+='       <input type="reset" value="Reset" id="reset-mock" />',c+='       <div id="status-mock">',c+='           <div id="status-mock-color">',c+="           </div>",c+="       </div>",c+="   </div>",c+="</div>",e.innerHTML=c.trim(),e.firstChild}(c));var a=document.getElementById("mock"),d=document.getElementById("mock-control-panel"),n=document.getElementById("mock-left-right"),s=document.getElementById("mock-show-hide"),o=document.getElementById("mock-delete"),l=document.getElementById("manual"),m=document.getElementById("manual-tab"),v=document.getElementById("script"),r=document.getElementById("script-tab"),u=document.getElementById("reset-mock"),k=document.getElementById("send-mock"),f=document.getElementById("service-name"),L=document.getElementById("manual-mock"),g=document.getElementById("script-mock"),p=document.getElementById("status-mock");n.addEventListener("click",(function(){d.classList.toggle("left"),n.innerHTML=d.classList.contains("left")?"Right":"Left"})),s.addEventListener("click",(function(){a.classList.toggle("active"),n.classList.toggle("active"),s.innerHTML=a.classList.contains("active")?"Hide":"Show",d.classList.contains("left")&&a.classList.contains("active")&&(d.classList.remove("left"),n.innerHTML="Left")})),o.addEventListener("click",(function(){a.parentElement.removeChild(a)})),l.addEventListener("click",(function(){l.classList.add("active"),v.classList.remove("active"),m.classList.add("active"),r.classList.remove("active")})),v.addEventListener("click",(function(){v.classList.add("active"),l.classList.remove("active"),r.classList.add("active"),m.classList.remove("active")})),u.addEventListener("click",(function(){t.platform.mockResetMTR(e,f.value).then((function(){i(p,"ok"),L.value="",g.value=""})).catch((function(t){i(p,"error")}))})),k.addEventListener("click",(function(){var c=m.classList.contains("active");if(i(p,"waiting"),c)t.platform.mockAddMTR(e,f.value,L.value.split(";")).then((function(){i(p,"ok"),L.value=""})).catch((function(t){i(p,"error")}));else try{for(var a=JSON.parse(g.value),d=null,n=0;n<a.length;n++){var s=n;d=d?d.then((function(){t.platform.mockAddMTR(e,a[s].serviceName,a[s].mock)})):t.platform.mockAddMTR(e,a[s].serviceName,a[s].mock)}d.then((function(){i(p,"ok"),g.value=""})).catch((function(t){i(p,"error")}))}catch(t){i(p,"error")}}))}(t,e,c):"ITG"===e&&function(t,e,c){var a,d;document.body.appendChild((d='<div id="mock">',d+='   <div id="mock-control-panel">',d+='   \t<div id="mock-left-right">',d+="   \t\tLeft",d+="   \t</div>",d+='   \t<div id="mock-show-hide">',d+="       \tShow",d+="   \t</div>",d+='\t\t<div id="mock-delete">',d+="\t\t\tDelete",d+="\t\t</div>",d+="   </div>",d+='   <div id="mock-tabs">',d+='       <div class="tab active" id="add-mock">',d+="           Add Mock",d+="       </div>",d+='       <div class="tab" id="get-mock">',d+="           Get Mock",d+="       </div>",d+="   </div>",d+='   <div id="mock-content-tabs">',d+='       <div class="tab active" id="add-mock-tab">',d+='           <div class="input-group">',d+="               <label>",d+="                   Add mock :",d+="               </label>",d+='               <textarea id="add-mock-area"></textarea>',d+="           </div>",d+="\t\t</div>",d+='       <div class="tab" id="get-mock-tab">',d+='           <div class="input-group">',d+="               <label>",d+="                   Get Mock :",d+="               </label>",d+='               <textarea id="get-mock-area" disabled="disabled"></textarea>',d+="           </div>",d+="\t\t</div>",d+="   </div>",d+='   <div id="mock-actions">',d+='       <input type="button" value="Send" id="send-mock" />',d+='       <input type="button" value="Get" id="call-mock" />',d+='       <input type="reset" value="Reset" id="reset-mock" />',d+='       <input type="reset" value="Reset all" id="reset-all-mock" />',d+='       <div id="status-mock">',d+='           <div id="status-mock-color">',d+="           </div>",d+="       </div>",d+="   </div>",d+="</div>",(a=document.createElement("div")).innerHTML=d.trim(),a.firstChild));var n=document.getElementById("mock"),s=document.getElementById("mock-control-panel"),o=document.getElementById("mock-left-right"),l=document.getElementById("mock-show-hide"),m=document.getElementById("mock-delete"),v=document.getElementById("add-mock"),r=document.getElementById("add-mock-tab"),u=document.getElementById("get-mock"),k=document.getElementById("get-mock-tab"),f=document.getElementById("send-mock"),L=document.getElementById("call-mock"),g=document.getElementById("reset-mock"),p=document.getElementById("reset-all-mock"),E=document.getElementById("add-mock-area"),y=document.getElementById("get-mock-area"),h=document.getElementById("status-mock");E.value=JSON.stringify({lotteryGameCode:c,stake:{value:100,currency:"EUR"},draws:[{rankIndex:1},{rankIndex:2}]},null,4),o.addEventListener("click",(function(){s.classList.toggle("left"),o.innerHTML=s.classList.contains("left")?"Right":"Left"})),l.addEventListener("click",(function(){n.classList.toggle("active"),o.classList.toggle("active"),l.innerHTML=n.classList.contains("active")?"Hide":"Show",s.classList.contains("left")&&n.classList.contains("active")&&(s.classList.remove("left"),o.innerHTML="Left")})),m.addEventListener("click",(function(){n.parentElement.removeChild(n)})),v.addEventListener("click",(function(){v.classList.add("active"),u.classList.remove("active"),r.classList.add("active"),k.classList.remove("active")})),u.addEventListener("click",(function(){u.classList.add("active"),v.classList.remove("active"),k.classList.add("active"),r.classList.remove("active")})),f.addEventListener("click",(function(){i(h,"waiting"),v.classList.add("active"),u.classList.remove("active"),r.classList.add("active"),k.classList.remove("active");try{const a=JSON.parse(E.value);a.lotteryId=t.channel.lotteryCode,a.lotteryGameCode=a.lotteryGameCode??c,t.platform.mockAddITG(e,a).then((function(){i(h,"ok")})).catch((function(t){i(h,"error")}))}catch(t){i(h,"error")}})),L.addEventListener("click",(function(){i(h,"waiting"),u.classList.add("active"),v.classList.remove("active"),k.classList.add("active"),r.classList.remove("active"),t.platform.mockGetITG(e,c).then((function(t){i(h,"ok"),y.value=JSON.stringify(t.data,null,4)})).catch((function(t){i(h,"error")}))})),g.addEventListener("click",(function(){t.platform.mockResetITG(e,c).then((function(){i(h,"ok"),y.value=""})).catch((function(t){i(h,"error")}))})),p.addEventListener("click",(function(){t.platform.mockResetAllITG(e,c).then((function(){i(h,"ok"),y.value=""})).catch((function(t){i(h,"error")}))}))}(t,e,c)}},"./assets/mock.css":function(t,e,c){"use strict";c.r(e)}}]);